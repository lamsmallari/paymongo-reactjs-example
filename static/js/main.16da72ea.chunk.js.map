{"version":3,"sources":["helpers/postData.js","services/paymongo.js","components/ViewsHeader.js","dummyData.js","helpers/toPesoFormat.js","components/ProductItem.js","components/AddToCartDialog.js","components/Products.js","components/CartItem.js","components/CartItemOptionsDrawer.js","components/Cart.js","helpers/expirationYearList.js","components/CheckoutForm.js","components/OrderComplete.js","components/Checkout.js","components/FooterNavigation.js","hooks/useColorScheme.js","App.js","serviceWorker.js","index.js"],"names":["postData","url","data","key","a","process","authCode","status","code","detail","errors","fetch","method","headers","accept","authorization","body","JSON","stringify","response","json","result","hasOwnProperty","paymongo","errorObj","obj","message","createToken","Promise","resolve","reject","then","createPayment","useStyles","makeStyles","theme","title","marginBottom","spacing","ViewsHeader","children","colorScheme","setColorScheme","classes","Grid","container","justify","item","Typography","variant","component","className","IconButton","onClick","aria-label","style","color","amber","dummyData","predefinedCreditCardData","attributes","number","exp_month","exp_year","cvc","billing","address","line1","city","state","country","postal_code","name","email","phone","predefinedAmount","tokenId","tokenType","amount","currency","source","id","type","productDummyData","price","details","image","PESO","value","symbol","decimal","separator","format","root","maxWidth","actions","paddingTop","paddingBottom","paddingRight","ProductItem","handleAddToCart","Card","CardContent","gutterBottom","CardActions","Button","size","disableElevation","AddToCartDialog","dialogState","handleDialogClose","itemName","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogContent","Box","display","justifyContent","mb","green","fontSize","align","Products","useState","dialog","setDialog","requestDialogCloseTimeOut","setRequestDialogCloseTimeOut","useEffect","dialogCloseDelay","setTimeout","clearTimeout","direction","map","product","CartItem","handleItemQuantity","ListItem","divider","ListItemAvatar","Avatar","ListItemText","primary","primaryTypographyProps","secondary","quantity","subTotal","CartItemOptionsDrawer","handleDrawerClose","handleCartQuantity","handRemoveFromCart","main","width","quantityFieldContainer","quantityField","textAlign","delete","Drawer","anchor","alignItems","xs","TextField","label","startIcon","cartList","backgroundColor","palette","background","paper","total","marginTop","padding","checkout","cyan","Cart","cart","cartTotal","setIndex","editQuantity","setEditQuantity","length","List","disablePadding","Paper","square","expYearList","thisYear","Date","getFullYear","years","y","year","toString","substring","push","text","form","borderBottomColor","formTitle","formTitleIcon","marginRight","table","grandTotal","blue","borderBottom","pay","error","CheckoutForm","handlePayment","handleFieldChange","billingInfo","onSubmit","Alert","severity","fullWidth","onChange","disabled","FormControl","formControl","InputLabel","Select","labelId","MenuItem","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","scope","OrderComplete","handleConfirm","toFixed","paperTitle","paperTitleIcon","purchaseDetails","billingDetails","colSpan","paymentTransitionDelay","paddingLeft","spinner","Checkout","orderCompleteData","CircularProgress","height","buttons","FooterNavigation","index","cartCount","BottomNavigation","event","newValue","showLabels","BottomNavigationAction","icon","Badge","badgeContent","useColorScheme","App","setCart","setCartTotal","setPaymentTransitiondDelay","setOrderCompleteData","setErrors","setBillingInfo","React","useMemo","createMuiTheme","typography","fontFamily","join","bgColor","bg","flexDirection","minHeight","footer","grey","transition","views","cartData","existingDataIndex","_","findIndex","productQuantity","reduce","acc","curr","itemId","operation","itemIndex","filter","preventDefault","paymongoTokenData","parseInt","replace","paymongoPaymentData","catch","console","log","target","ThemeProvider","CssBaseline","Container","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.16da72ea.chunk.js","sourcesContent":["const errorData = (code, detail) => {\r\n  return { errors: [{ code, detail }] };\r\n};\r\n\r\nconst postData = async (url, data, key) => {\r\n  const publicKey = process.env.REACT_APP_PAYMONGO_BASE64_PUBLIC_KEY;\r\n  const secretKey = process.env.REACT_APP_PAYMONGO_BASE64_SECRET_KEY;\r\n  const authCode =\r\n    key === \"public\" ? publicKey : key === \"secret\" ? secretKey : null;\r\n\r\n  if (authCode === null) {\r\n    return {\r\n      status: \"error\",\r\n      data: errorData(\"invalid_parameter\", \"key parameter invalid\")\r\n    };\r\n  }\r\n\r\n  const response = await fetch(url, {\r\n    method: \"POST\",\r\n    headers: {\r\n      accept: \"application/json\",\r\n      \"content-type\": \"application/json\",\r\n      authorization: `Basic ${authCode}`\r\n    },\r\n    body: JSON.stringify(data)\r\n  });\r\n\r\n  const result = await response.json();\r\n\r\n  return result.hasOwnProperty(\"errors\")\r\n    ? { status: \"error\", data: result }\r\n    : { status: \"success\", data: result };\r\n};\r\n\r\nexport default postData;\r\n","import postData from \"../helpers/postData\";\r\n\r\nconst paymongo = {};\r\n\r\nconst errorObj = obj => {\r\n  return { code: obj.code, message: obj.detail };\r\n};\r\n\r\npaymongo.createToken = data => {\r\n  const postUrl = \"https://api.paymongo.com/v1/tokens\";\r\n\r\n  return new Promise((resolve, reject) => {\r\n    if (!data) {\r\n      reject(errorObj(\"no_data\", \"No data provided\"));\r\n      return;\r\n    }\r\n\r\n    postData(postUrl, data, \"public\").then(result => {\r\n      if (result.status === \"error\") reject(errorObj(result.data.errors[0]));\r\n\r\n      resolve(result.data);\r\n    });\r\n  });\r\n};\r\n\r\npaymongo.createPayment = data => {\r\n  const postUrl = \"https://api.paymongo.com/v1/payments\";\r\n\r\n  return new Promise((resolve, reject) => {\r\n    if (!data) {\r\n      reject(errorObj(\"no_token\", \"No data provided\"));\r\n      return;\r\n    }\r\n\r\n    postData(postUrl, data, \"secret\").then(result => {\r\n      if (result.status === \"error\") reject(errorObj(result.data.errors[0]));\r\n\r\n      resolve(result.data);\r\n    });\r\n  });\r\n};\r\n\r\nexport default paymongo;\r\n","import React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport Brightness5Icon from \"@material-ui/icons/Brightness5\";\r\nimport Brightness2Icon from \"@material-ui/icons/Brightness2\";\r\n\r\nimport amber from \"@material-ui/core/colors/amber\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  title: {\r\n    marginBottom: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst ViewsHeader = ({ children, colorScheme, setColorScheme }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid container justify=\"space-between\">\r\n      <Grid item>\r\n        <Typography variant=\"h4\" component=\"h1\" className={classes.title}>\r\n          {children}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item>\r\n        <IconButton\r\n          onClick={() =>\r\n            setColorScheme(colorScheme === \"dark\" ? \"light\" : \"dark\")\r\n          }\r\n          aria-label=\"set color scheme\"\r\n        >\r\n          {colorScheme === \"dark\" ? (\r\n            <Brightness5Icon style={{ color: amber[500] }} />\r\n          ) : (\r\n            <Brightness2Icon />\r\n          )}\r\n        </IconButton>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ViewsHeader;\r\n","const dummyData = {\r\n  predefinedCreditCardData: {\r\n    data: {\r\n      attributes: {\r\n        number: \"4123450131000508\",\r\n        exp_month: 12,\r\n        exp_year: 25,\r\n        cvc: \"111\",\r\n        billing: {\r\n          address: {\r\n            line1: \"address\",\r\n            city: \"Biñan\",\r\n            state: \"Laguna\",\r\n            country: \"PH\",\r\n            postal_code: \"4024\"\r\n          },\r\n          name: \"John\",\r\n          email: \"johnmail@gmail.com\",\r\n          phone: \"09988909890\"\r\n        }\r\n      }\r\n    }\r\n  },\r\n  predefinedAmount: (tokenId, tokenType) => {\r\n    return {\r\n      data: {\r\n        attributes: {\r\n          amount: 10000,\r\n          currency: \"PHP\",\r\n          source: {\r\n            id: tokenId,\r\n            type: tokenType\r\n          }\r\n        }\r\n      }\r\n    };\r\n  },\r\n  productDummyData: [\r\n    {\r\n      id: \"1\",\r\n      title: \"Product Item\",\r\n      price: 5000,\r\n      details: \"Product short description\",\r\n      image: \"https://placeimg.com/640/480/tech\"\r\n    },\r\n    {\r\n      id: \"2\",\r\n      title: \"Product Item with a long name\",\r\n      price: 8000,\r\n      details: \"Product short description\",\r\n      image: \"https://placeimg.com/640/480/tech\"\r\n    }\r\n  ]\r\n};\r\n\r\nexport default dummyData;\r\n","import currency from \"currency.js\";\r\n\r\nconst PESO = value =>\r\n  currency(value, { symbol: \"₱\", decimal: \".\", separator: \",\" }).format(true);\r\n\r\nexport default PESO;\r\n","import React from \"react\";\r\nimport PESO from \"../helpers/toPesoFormat\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    maxWidth: 600\r\n  },\r\n  actions: {\r\n    paddingTop: 0,\r\n    paddingBottom: theme.spacing(2),\r\n    paddingRight: theme.spacing(2)\r\n  },\r\n  price: {\r\n    marginBottom: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst ProductItem = ({ data, handleAddToCart, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n            {data.title}\r\n          </Typography>\r\n          <Typography className={classes.price} color=\"textSecondary\">\r\n            {`${PESO(data.price)}`}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {data.details}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <Grid container justify=\"flex-end\">\r\n            <Button\r\n              size=\"small\"\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              disableElevation\r\n              onClick={() => handleAddToCart(data)}\r\n            >\r\n              Add to cart\r\n            </Button>\r\n          </Grid>\r\n        </CardActions>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductItem;\r\n","import React from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AddShoppingCartIcon from \"@material-ui/icons/AddShoppingCart\";\r\nimport green from \"@material-ui/core/colors/green\";\r\n\r\nconst AddToCartDialog = ({ dialogState, handleDialogClose, itemName }) => {\r\n  return (\r\n    <Dialog\r\n      open={dialogState}\r\n      onClose={handleDialogClose}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogContent>\r\n        <Box component=\"div\" display=\"flex\" justifyContent=\"center\" mb={2}>\r\n          <AddShoppingCartIcon style={{ color: green[500] }} fontSize=\"large\" />\r\n        </Box>\r\n\r\n        <Typography variant=\"h6\" component=\"h6\" align=\"center\" gutterBottom>\r\n          {itemName}\r\n        </Typography>\r\n        <Typography\r\n          component=\"p\"\r\n          align=\"center\"\r\n          color=\"textPrimary\"\r\n          gutterBottom\r\n        >\r\n          Added to cart\r\n        </Typography>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AddToCartDialog;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport dummyData from \"../dummyData\";\r\nimport ProductItem from \"./ProductItem\";\r\nimport AddToCartDialog from \"./AddToCartDialog\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst Products = ({ handleAddToCart }) => {\r\n  const [dialog, setDialog] = useState({ open: false, itemName: \"\" });\r\n  const [requestDialogCloseTimeOut, setRequestDialogCloseTimeOut] = useState(\r\n    false\r\n  );\r\n\r\n  useEffect(() => {\r\n    let dialogCloseDelay = false;\r\n\r\n    if (requestDialogCloseTimeOut) {\r\n      dialogCloseDelay = setTimeout(() => {\r\n        dialogCloseDelay = false;\r\n        setRequestDialogCloseTimeOut(false);\r\n        setDialog({ ...dialog, open: false });\r\n      }, 3000);\r\n    }\r\n\r\n    return () => {\r\n      if (dialogCloseDelay) {\r\n        clearTimeout(dialogCloseDelay);\r\n      }\r\n    };\r\n  }, [requestDialogCloseTimeOut, setDialog, dialog]);\r\n\r\n  const handleDialogClose = () => {\r\n    setDialog({ ...dialog, open: false });\r\n    setRequestDialogCloseTimeOut(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!!dummyData.productDummyData && (\r\n        <>\r\n          <Grid container direction=\"column\" spacing={2}>\r\n            {dummyData.productDummyData.map(product => (\r\n              <Grid item key={product.id}>\r\n                <ProductItem\r\n                  data={product}\r\n                  handleAddToCart={() => {\r\n                    handleAddToCart(product);\r\n                    setDialog({ open: true, itemName: product.title });\r\n                    setRequestDialogCloseTimeOut(true);\r\n                  }}\r\n                />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </>\r\n      )}\r\n\r\n      <AddToCartDialog\r\n        handleDialogClose={handleDialogClose}\r\n        dialogState={dialog.open}\r\n        itemName={dialog.itemName}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","import React from \"react\";\r\nimport PESO from \"../helpers/toPesoFormat\";\r\n\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nconst CartItem = ({ item, handleItemQuantity }) => {\r\n  return (\r\n    <>\r\n      <ListItem divider>\r\n        <ListItemAvatar>\r\n          <Avatar>\r\n            <ImageIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText\r\n          primary={item.title}\r\n          primaryTypographyProps={{ gutterBottom: true, component: \"p\" }}\r\n          secondary={\r\n            <>\r\n              {`Price: ${PESO(item.price)}`}\r\n              <br />\r\n              {`Quantity: ${item.quantity}`}\r\n              <br />\r\n              {`Subtotal: ${PESO(item.subTotal)}`}\r\n            </>\r\n          }\r\n        />\r\n        <Box component=\"div\">\r\n          <IconButton\r\n            onClick={() => handleItemQuantity(item)}\r\n            aria-label=\"add to likes\"\r\n          >\r\n            <EditIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </ListItem>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n// import Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nconst CartItemOptionsDrawer = ({\r\n  item,\r\n  open,\r\n  handleDrawerClose,\r\n  handleCartQuantity,\r\n  handRemoveFromCart\r\n}) => {\r\n  const useStyles = makeStyles(theme => ({\r\n    main: {\r\n      width: \"100%\",\r\n      maxWidth: 260,\r\n      paddingTop: theme.spacing(2),\r\n      paddingBottom: theme.spacing(2)\r\n    },\r\n    quantityFieldContainer: {\r\n      paddingTop: theme.spacing(2),\r\n      paddingBottom: theme.spacing(3)\r\n    },\r\n    quantityField: {\r\n      maxWidth: 100,\r\n      textAlign: \"center\"\r\n    },\r\n    delete: {\r\n      marginBottom: theme.spacing(1)\r\n    }\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Drawer anchor=\"bottom\" open={open} onClose={handleDrawerClose}>\r\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n        <Grid item xs={12} className={classes.main}>\r\n          <Typography\r\n            component=\"p\"\r\n            align=\"center\"\r\n            color=\"textPrimary\"\r\n            gutterBottom\r\n          >\r\n            {item.title}\r\n          </Typography>\r\n\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"space-between\"\r\n            className={classes.quantityFieldContainer}\r\n          >\r\n            <div>\r\n              <IconButton\r\n                onClick={() => handleCartQuantity(item.id, \"decrement\")}\r\n                aria-label=\"decrement\"\r\n              >\r\n                <RemoveIcon />\r\n              </IconButton>\r\n            </div>\r\n\r\n            <div>\r\n              <TextField\r\n                id=\"quantity\"\r\n                label=\"Quantity\"\r\n                variant=\"outlined\"\r\n                value={item.quantity}\r\n                className={classes.quantityField}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <IconButton\r\n                onClick={() => handleCartQuantity(item.id, \"increment\")}\r\n                aria-label=\"increment\"\r\n              >\r\n                <AddIcon />\r\n              </IconButton>\r\n            </div>\r\n          </Grid>\r\n\r\n          <Grid container direction=\"column\" justify=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              disableElevation\r\n              onClick={() => {\r\n                handleDrawerClose();\r\n                handRemoveFromCart(item.id);\r\n              }}\r\n              startIcon={<DeleteIcon />}\r\n              className={classes.delete}\r\n            >\r\n              Remove from Cart\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disableElevation\r\n              onClick={handleDrawerClose}\r\n              startIcon={<CloseIcon />}\r\n            >\r\n              Close\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default CartItemOptionsDrawer;\r\n","import React, { useState } from \"react\";\r\nimport PESO from \"../helpers/toPesoFormat\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CartItem from \"./CartItem\";\r\nimport CartItemOptionsDrawer from \"./CartItemOptionsDrawer\";\r\nimport cyan from \"@material-ui/core/colors/cyan\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cartList: {\r\n    width: \"100%\",\r\n    maxWidth: 600,\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  total: {\r\n    marginTop: theme.spacing(3),\r\n    padding: theme.spacing(2)\r\n  },\r\n  checkout: {\r\n    color: theme.palette.type === \"dark\" ? cyan[300] : theme.palette.primary\r\n  }\r\n}));\r\n\r\nconst Cart = ({\r\n  cart,\r\n  cartTotal,\r\n  handleCartQuantity,\r\n  handRemoveFromCart,\r\n  setIndex\r\n}) => {\r\n  const [editQuantity, setEditQuantity] = useState({\r\n    open: false,\r\n    item: { title: \"\", quantity: \"\" }\r\n  });\r\n\r\n  const handleItemQuantity = item => {\r\n    setEditQuantity({ open: true, item });\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setEditQuantity({ ...editQuantity, open: false });\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      {cart.length > 0 && (\r\n        <>\r\n          <List component=\"nav\" className={classes.cartList} disablePadding>\r\n            {cart.map(item => (\r\n              <CartItem\r\n                key={item.id}\r\n                item={item}\r\n                open={editQuantity.open}\r\n                handleItemQuantity={handleItemQuantity}\r\n              />\r\n            ))}\r\n          </List>\r\n\r\n          <Paper square className={classes.total}>\r\n            <Grid container justify=\"space-between\">\r\n              <Grid item>\r\n                <Typography variant=\"h6\" component=\"h6\">\r\n                  Total: {PESO(cartTotal)}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button\r\n                  className={classes.checkout}\r\n                  onClick={() => setIndex(2)}\r\n                >\r\n                  Checkout\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </>\r\n      )}\r\n\r\n      {cart.length <= 0 && <p>Cart is empty. Please add products your cart.</p>}\r\n\r\n      <CartItemOptionsDrawer\r\n        open={editQuantity.open}\r\n        item={editQuantity.item}\r\n        handleDrawerClose={handleDrawerClose}\r\n        handleCartQuantity={handleCartQuantity}\r\n        handRemoveFromCart={handRemoveFromCart}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","const expYearList = () => {\r\n  let yearsToShow = 20;\r\n  let thisYear = new Date().getFullYear();\r\n  let years = [];\r\n\r\n  for (let y = thisYear; y < thisYear + yearsToShow; y++) {\r\n    let year = y.toString().substring(2);\r\n    years.push({ value: year, text: year });\r\n  }\r\n\r\n  return years;\r\n};\r\n\r\nexport default expYearList;\r\n","import React from \"react\";\r\nimport expYearList from \"../helpers/expirationYearList\";\r\nimport PESO from \"../helpers/toPesoFormat\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nimport CreditCardIcon from \"@material-ui/icons/CreditCard\";\r\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\r\nimport ShoppingBasketIcon from \"@material-ui/icons/ShoppingBasket\";\r\n\r\nimport blue from \"@material-ui/core/colors/blue\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport cyan from \"@material-ui/core/colors/cyan\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  title: {\r\n    marginBottom: theme.spacing(3)\r\n  },\r\n  form: {\r\n    \"& .MuiInput-root\": {\r\n      marginBottom: theme.spacing(1)\r\n    },\r\n    \"& .MuiFormLabel-root.Mui-focused\": {\r\n      color: theme.palette.type === \"dark\" ? cyan[300] : theme.palette.primary\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor:\r\n        theme.palette.type === \"dark\" ? cyan[300] : theme.palette.primary\r\n    }\r\n  },\r\n  formTitle: {\r\n    padding: 4\r\n  },\r\n  formTitleIcon: {\r\n    marginRight: theme.spacing(1),\r\n    color:\r\n      theme.palette.type === \"dark\" ? cyan[300] : theme.palette.secondary.main\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  table: {\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  grandTotal: {\r\n    \"& td\": {\r\n      backgroundColor: theme.palette.type === \"dark\" ? blue[700] : blue[50],\r\n      borderBottom: \"none\"\r\n    },\r\n    \"& .MuiTableCell-root\": {\r\n      paddingTop: theme.spacing(2),\r\n      paddingBottom: theme.spacing(2)\r\n    }\r\n  },\r\n  pay: {\r\n    marginTop: theme.spacing(2),\r\n    backgroundColor: green[600],\r\n    \"&:hover, &:focus, &:active\": {\r\n      backgroundColor: green[900]\r\n    }\r\n  },\r\n  error: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst CheckoutForm = ({\r\n  cart,\r\n  cartTotal,\r\n  handlePayment,\r\n  handleFieldChange,\r\n  billingInfo,\r\n  errors\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      {cart.length > 0 && (\r\n        <form className={classes.form} onSubmit={handlePayment}>\r\n          <Paper className={classes.paper}>\r\n            {errors && (\r\n              <Alert severity=\"error\" className={classes.error}>\r\n                {errors}\r\n              </Alert>\r\n            )}\r\n            <Grid\r\n              container\r\n              alignItems=\"center\"\r\n              spacing={1}\r\n              className={classes.formTitle}\r\n            >\r\n              <CreditCardIcon className={classes.formTitleIcon} />\r\n              <Typography variant=\"h6\" component=\"h6\">\r\n                Credit Card\r\n              </Typography>\r\n            </Grid>\r\n            <Grid container spacing={1}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  id=\"number\"\r\n                  name=\"number\"\r\n                  fullWidth\r\n                  label=\"Credit Card Number\"\r\n                  onChange={handleFieldChange}\r\n                  value={billingInfo.number}\r\n                  disabled\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <FormControl className={classes.formControl} fullWidth>\r\n                  <InputLabel id=\"exp-month-label\">Exp. Month</InputLabel>\r\n                  <Select\r\n                    labelId=\"exp-month-label\"\r\n                    id=\"exp_month\"\r\n                    name=\"exp_month\"\r\n                    value={billingInfo.exp_month}\r\n                    fullWidth\r\n                    onChange={handleFieldChange}\r\n                  >\r\n                    <MenuItem value={1}>1</MenuItem>\r\n                    <MenuItem value={2}>2</MenuItem>\r\n                    <MenuItem value={3}>3</MenuItem>\r\n                    <MenuItem value={4}>4</MenuItem>\r\n                    <MenuItem value={5}>5</MenuItem>\r\n                    <MenuItem value={6}>6</MenuItem>\r\n                    <MenuItem value={7}>7</MenuItem>\r\n                    <MenuItem value={8}>8</MenuItem>\r\n                    <MenuItem value={9}>9</MenuItem>\r\n                    <MenuItem value={10}>10</MenuItem>\r\n                    <MenuItem value={11}>11</MenuItem>\r\n                    <MenuItem value={12}>12</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <FormControl className={classes.formControl} fullWidth>\r\n                  <InputLabel id=\"exp-year-label\">Exp. Year</InputLabel>\r\n                  <Select\r\n                    labelId=\"exp-year-label\"\r\n                    id=\"exp_year\"\r\n                    name=\"exp_year\"\r\n                    value={billingInfo.exp_year}\r\n                    fullWidth\r\n                    onChange={handleFieldChange}\r\n                  >\r\n                    {expYearList().map(year => (\r\n                      <MenuItem key={year.value} value={year.value}>\r\n                        {year.text}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  id=\"cvc\"\r\n                  name=\"cvc\"\r\n                  value={billingInfo.cvc}\r\n                  fullWidth\r\n                  label=\"CVC\"\r\n                  onChange={handleFieldChange}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n\r\n          <Paper className={classes.paper}>\r\n            <Grid\r\n              container\r\n              alignItems=\"center\"\r\n              spacing={1}\r\n              className={classes.formTitle}\r\n            >\r\n              <AccountBoxIcon className={classes.formTitleIcon} />\r\n              <Typography variant=\"h6\" component=\"h6\">\r\n                Billing Details\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid container spacing={1}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  value={billingInfo.name}\r\n                  onChange={handleFieldChange}\r\n                  fullWidth\r\n                  label=\"Full Name\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <TextField\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  value={billingInfo.email}\r\n                  fullWidth\r\n                  label=\"Email\"\r\n                  onChange={handleFieldChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <TextField\r\n                  id=\"phone\"\r\n                  value={billingInfo.phone}\r\n                  name=\"phone\"\r\n                  fullWidth\r\n                  label=\"Phone No.\"\r\n                  onChange={handleFieldChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  id=\"address\"\r\n                  name=\"line1\"\r\n                  value={billingInfo.line1}\r\n                  fullWidth\r\n                  label=\"Address\"\r\n                  onChange={handleFieldChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <TextField\r\n                  id=\"city\"\r\n                  name=\"city\"\r\n                  value={billingInfo.city}\r\n                  fullWidth\r\n                  label=\"City\"\r\n                  onChange={handleFieldChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <TextField\r\n                  id=\"state\"\r\n                  name=\"state\"\r\n                  value={billingInfo.state}\r\n                  fullWidth\r\n                  label=\"State\"\r\n                  onChange={handleFieldChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <TextField\r\n                  id=\"country\"\r\n                  name=\"country\"\r\n                  value={billingInfo.country}\r\n                  fullWidth\r\n                  label=\"Country\"\r\n                  onChange={handleFieldChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <TextField\r\n                  id=\"postal_code\"\r\n                  name=\"postal_code\"\r\n                  value={billingInfo.postal_code}\r\n                  fullWidth\r\n                  label=\"Postal Code\"\r\n                  onChange={handleFieldChange}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n\r\n          <Paper className={classes.paper}>\r\n            <Grid\r\n              container\r\n              alignItems=\"center\"\r\n              spacing={1}\r\n              className={classes.formTitle}\r\n            >\r\n              <ShoppingBasketIcon className={classes.formTitleIcon} />\r\n              <Typography variant=\"h6\" component=\"h6\">\r\n                Order Review\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <TableContainer>\r\n              <Table\r\n                className={classes.table}\r\n                aria-label=\"review order table\"\r\n                size=\"small\"\r\n              >\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Item</TableCell>\r\n                    <TableCell align=\"right\">Subtotal</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {cart.map(item => (\r\n                    <TableRow key={item.id}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {item.title}\r\n\r\n                        <Typography\r\n                          variant=\"body2\"\r\n                          component=\"p\"\r\n                          color=\"textSecondary\"\r\n                        >\r\n                          {`Price: ${PESO(item.price)}`}\r\n                          <br />\r\n                          {`Quantity: ${item.quantity}`}\r\n                        </Typography>\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{PESO(item.subTotal)}</TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n\r\n                  <TableRow className={classes.grandTotal}>\r\n                    <TableCell>\r\n                      <strong>Grand Total</strong>:\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">\r\n                      <strong>{PESO(cartTotal)}</strong>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.pay}\r\n              size=\"large\"\r\n              fullWidth\r\n              onClick={handlePayment}\r\n            >\r\n              Pay with PayMongo\r\n            </Button>\r\n          </Paper>\r\n        </form>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CheckoutForm;\r\n","import React from \"react\";\r\nimport PESO from \"../helpers/toPesoFormat\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DoneAllOutlinedIcon from \"@material-ui/icons/DoneAllOutlined\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport green from \"@material-ui/core/colors/green\";\r\n\r\nconst OrderComplete = ({ data, handleConfirm }) => {\r\n  const result = { ...data.data };\r\n  const amount = PESO((result.attributes.amount / 100).toFixed(2));\r\n\r\n  const { email, name, phone } = result.attributes.billing;\r\n  const {\r\n    line1,\r\n    city,\r\n    postal_code,\r\n    state,\r\n    country\r\n  } = result.attributes.billing.address;\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      marginBottom: theme.spacing(2)\r\n    },\r\n    paperTitle: {\r\n      padding: 4\r\n    },\r\n    paperTitleIcon: {\r\n      marginTop: theme.spacing(2),\r\n      marginBottom: theme.spacing(2)\r\n    },\r\n    purchaseDetails: {\r\n      marginBottom: theme.spacing(2)\r\n    },\r\n    billingDetails: {\r\n      marginBottom: theme.spacing(4)\r\n    }\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.paper}>\r\n        <Grid container justify=\"center\" spacing={1}>\r\n          <DoneAllOutlinedIcon\r\n            className={classes.paperTitleIcon}\r\n            style={{ color: green[500] }}\r\n          />\r\n        </Grid>\r\n\r\n        <Typography\r\n          variant=\"h5\"\r\n          className={classes.paperTitle}\r\n          component=\"h5\"\r\n          align=\"center\"\r\n          gutterBottom\r\n        >\r\n          Payment Successful!\r\n        </Typography>\r\n\r\n        <TableContainer className={classes.purchaseDetails}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell colSpan={2}>Purchase Details</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <TableRow>\r\n                <TableCell>Amount</TableCell>\r\n                <TableCell>{amount}</TableCell>\r\n              </TableRow>\r\n\r\n              <TableRow>\r\n                <TableCell>Paymongo Reference No.</TableCell>\r\n                <TableCell>{result.id}</TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n\r\n        <TableContainer className={classes.billingDetails}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell colSpan={2}>Billing Details</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <TableRow>\r\n                <TableCell>Name</TableCell>\r\n                <TableCell>{name}</TableCell>\r\n              </TableRow>\r\n\r\n              <TableRow>\r\n                <TableCell>Email</TableCell>\r\n                <TableCell>{email}</TableCell>\r\n              </TableRow>\r\n\r\n              <TableRow>\r\n                <TableCell>Phone</TableCell>\r\n                <TableCell>{phone}</TableCell>\r\n              </TableRow>\r\n\r\n              <TableRow>\r\n                <TableCell>Address</TableCell>\r\n                <TableCell>\r\n                  {line1}, {city}, {postal_code}, {state}, {country}\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.pay}\r\n          size=\"large\"\r\n          fullWidth\r\n          onClick={handleConfirm}\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderComplete;\r\n","import React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport CheckoutForm from \"./CheckoutForm\";\r\nimport OrderComplete from \"./OrderComplete\";\r\n\r\nimport cyan from \"@material-ui/core/colors/cyan\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paymentTransitionDelay: {\r\n    paddingTop: theme.spacing(5),\r\n    paddingBottom: theme.spacing(4),\r\n    paddingRight: theme.spacing(2),\r\n    paddingLeft: theme.spacing(2)\r\n  },\r\n  spinner: {\r\n    marginBottom: theme.spacing(2),\r\n    \"& .MuiCircularProgress-root\": {\r\n      color: theme.palette.type === \"dark\" ? cyan[300] : theme.palette.primary\r\n    }\r\n  }\r\n}));\r\n\r\nconst Checkout = ({\r\n  cart,\r\n  cartTotal,\r\n  handlePayment,\r\n  handleFieldChange,\r\n  billingInfo,\r\n  orderCompleteData,\r\n  handleConfirm,\r\n  paymentTransitionDelay,\r\n  errors\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      {paymentTransitionDelay && (\r\n        <>\r\n          <Grid container justify=\"center\">\r\n            <Grid item>\r\n              <Grid\r\n                container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                component={Paper}\r\n                className={classes.paymentTransitionDelay}\r\n              >\r\n                <Grid item className={classes.spinner}>\r\n                  <CircularProgress />\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography component=\"p\" align=\"center\">\r\n                    Performing payment transaction, please wait.\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n\r\n      {cart.length <= 0 && !!orderCompleteData && !paymentTransitionDelay && (\r\n        <>\r\n          <OrderComplete\r\n            data={orderCompleteData}\r\n            handleConfirm={handleConfirm}\r\n          />\r\n        </>\r\n      )}\r\n\r\n      {cart.length > 0 && !orderCompleteData && !paymentTransitionDelay && (\r\n        <>\r\n          <CheckoutForm\r\n            cart={cart}\r\n            cartTotal={cartTotal}\r\n            handlePayment={handlePayment}\r\n            handleFieldChange={handleFieldChange}\r\n            billingInfo={billingInfo}\r\n            errors={errors}\r\n          />\r\n        </>\r\n      )}\r\n\r\n      {cart.length <= 0 && !orderCompleteData && !paymentTransitionDelay && (\r\n        <p>Cart is empty. Please add products your cart.</p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\r\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\r\nimport ShoppingCartOutlinedIcon from \"@material-ui/icons/ShoppingCartOutlined\";\r\nimport StorefrontRoundedIcon from \"@material-ui/icons/StorefrontRounded\";\r\nimport CreditCardRoundedIcon from \"@material-ui/icons/CreditCardRounded\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport cyan from \"@material-ui/core/colors/cyan\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: 80\r\n  },\r\n  buttons: {\r\n    \"& svg\": {\r\n      marginBottom: 5\r\n    },\r\n    \"&.Mui-selected\": {\r\n      color: theme.palette.type === \"dark\" ? cyan[300] : theme.palette.primary\r\n    }\r\n  }\r\n}));\r\n\r\nconst FooterNavigation = ({ onChange, index, cartCount }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <BottomNavigation\r\n      value={index}\r\n      onChange={(event, newValue) => {\r\n        onChange(newValue);\r\n      }}\r\n      showLabels\r\n      className={classes.root}\r\n    >\r\n      <BottomNavigationAction\r\n        className={classes.buttons}\r\n        label=\"Products\"\r\n        icon={<StorefrontRoundedIcon />}\r\n      />\r\n      <BottomNavigationAction\r\n        className={classes.buttons}\r\n        label=\"Cart\"\r\n        icon={\r\n          <Badge color=\"secondary\" badgeContent={cartCount}>\r\n            <ShoppingCartOutlinedIcon />\r\n          </Badge>\r\n        }\r\n      />\r\n      <BottomNavigationAction\r\n        className={classes.buttons}\r\n        label=\"Checkout\"\r\n        icon={<CreditCardRoundedIcon />}\r\n      />\r\n    </BottomNavigation>\r\n  );\r\n};\r\n\r\nexport default FooterNavigation;\r\n","import { useState } from \"react\";\r\n\r\nconst useColorScheme = () => {\r\n  const [colorScheme, setColorScheme] = useState(\"light\");\r\n  return { colorScheme, setColorScheme };\r\n};\r\n\r\nexport default useColorScheme;\r\n","import React, { useState, useEffect } from \"react\";\nimport paymongo from \"./services/paymongo\";\nimport _ from \"lodash\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport {\n  makeStyles,\n  createMuiTheme,\n  ThemeProvider\n} from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nimport ViewsHeader from \"./components/ViewsHeader\";\nimport Products from \"./components/Products\";\nimport Cart from \"./components/Cart\";\nimport Checkout from \"./components/Checkout\";\nimport FooterNavigation from \"./components/FooterNavigation\";\nimport useColorScheme from \"./hooks/useColorScheme\";\nimport grey from \"@material-ui/core/colors/grey\";\n\nconst useStyles = bgColor => {\n  const bg = bgColor ? { backgroundColor: bgColor } : {};\n\n  return makeStyles(theme => ({\n    root: {\n      ...bg,\n      display: \"flex\",\n      flexDirection: \"column\",\n      minHeight: \"100vh\"\n    },\n    main: {\n      marginTop: theme.spacing(4),\n      marginBottom: theme.spacing(2)\n    },\n    footer: {\n      marginTop: \"auto\"\n    }\n  }));\n};\n\nconst App = () => {\n  const { colorScheme, setColorScheme } = useColorScheme();\n\n  const [index, setIndex] = useState(0);\n  const [cart, setCart] = useState([]);\n  const [cartTotal, setCartTotal] = useState();\n  const [paymentTransitionDelay, setPaymentTransitiondDelay] = useState(false);\n  const [orderCompleteData, setOrderCompleteData] = useState(null);\n  const [errors, setErrors] = useState(null);\n  const [billingInfo, setBillingInfo] = useState({\n    number: \"4123450131000508\",\n    exp_month: 12,\n    exp_year: 25,\n    cvc: \"111\",\n    line1: \"blk 1 lot 1 address example\",\n    city: \"Biñan\",\n    state: \"Laguna\",\n    country: \"PH\",\n    postal_code: \"4024\",\n    name: \"John\",\n    email: \"johnmail@gmail.com\",\n    phone: \"09988909890\"\n  });\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: colorScheme\n        },\n        typography: {\n          fontFamily: [\n            \"Roboto\",\n            \"-apple-system\",\n            \"BlinkMacSystemFont\",\n            '\"Segoe UI\"',\n            '\"Helvetica Neue\"',\n            \"Arial\",\n            \"sans-serif\",\n            '\"Apple Color Emoji\"',\n            '\"Segoe UI Emoji\"',\n            '\"Segoe UI Symbol\"'\n          ].join(\",\")\n        }\n      }),\n    [colorScheme]\n  );\n\n  const classes = useStyles(colorScheme === \"light\" ? grey[300] : \"\")();\n\n  useEffect(() => {\n    let transition = false;\n\n    if (paymentTransitionDelay) {\n      transition = setTimeout(() => {\n        transition = false;\n        setPaymentTransitiondDelay(false);\n      }, 5000);\n    }\n\n    return () => {\n      if (transition) {\n        clearTimeout(transition);\n      }\n    };\n  }, [paymentTransitionDelay]);\n\n  const handlePayment = event => {\n    event.preventDefault();\n\n    const {\n      number,\n      exp_month,\n      exp_year,\n      cvc,\n      line1,\n      city,\n      state,\n      country,\n      postal_code,\n      name,\n      email,\n      phone\n    } = billingInfo;\n\n    const paymongoTokenData = {\n      data: {\n        attributes: {\n          number,\n          exp_month: parseInt(exp_month),\n          exp_year: parseInt(exp_year),\n          cvc,\n          billing: {\n            name,\n            email,\n            phone,\n            address: {\n              line1,\n              city,\n              state,\n              country,\n              postal_code\n            }\n          }\n        }\n      }\n    };\n\n    const amount = parseInt(\n      cartTotal\n        .toFixed(2)\n        .toString()\n        .replace(\".\", \"\")\n    );\n\n    const paymongoPaymentData = (tokenId, tokenType) => {\n      return {\n        data: {\n          attributes: {\n            amount,\n            currency: \"PHP\",\n            source: {\n              id: tokenId,\n              type: tokenType\n            }\n          }\n        }\n      };\n    };\n\n    setPaymentTransitiondDelay(true);\n    setErrors(null);\n\n    paymongo\n      .createToken(paymongoTokenData)\n      .then(result => {\n        const tokenId = result.data.id;\n        const tokenType = result.data.type;\n\n        paymongo\n          .createPayment(paymongoPaymentData(tokenId, tokenType))\n          .then(data => {\n            setOrderCompleteData(data);\n            setCart([]);\n            setCartTotal(null);\n          })\n          .catch(error => {\n            const code = error.code;\n            const message = error.message;\n            console.log(code, message);\n          });\n      })\n      .catch(error => {\n        const code = error.code;\n        const message = error.message;\n        console.log(code, message);\n        setErrors(message);\n      });\n  };\n\n  const handleFieldChange = event => {\n    const { name, value } = event.target;\n\n    setBillingInfo({ ...billingInfo, [name]: value });\n  };\n\n  const handleAddToCart = product => {\n    const cartData = [...cart];\n    const existingDataIndex = _.findIndex(cartData, { id: product.id });\n\n    if (existingDataIndex >= 0) {\n      // 1. if product is already in cart, perform merge\n      const productQuantity = cartData[existingDataIndex].quantity + 1;\n      const subTotal = cartData[existingDataIndex].price * productQuantity;\n\n      cartData[existingDataIndex] = {\n        ...product,\n        quantity: productQuantity,\n        subTotal: subTotal\n      };\n    } else {\n      // 2. if product is not in the cart, perform add\n      cartData.push({\n        ...product,\n        quantity: 1,\n        subTotal: product.price\n      });\n    }\n\n    const total = cartData.reduce((acc, curr) => acc + curr.subTotal, 0);\n    setCartTotal(total);\n\n    setCart(cartData);\n    setOrderCompleteData(null);\n  };\n\n  const handleCartQuantity = (itemId, operation) => {\n    const cartData = [...cart];\n    const itemIndex = _.findIndex(cartData, { id: itemId });\n\n    switch (operation) {\n      case \"increment\":\n        cartData[itemIndex].quantity++;\n        break;\n      case \"decrement\":\n        if (cartData[itemIndex].quantity > 1) {\n          cartData[itemIndex].quantity--;\n        }\n        break;\n      default:\n        break;\n    }\n\n    const price = cartData[itemIndex].price;\n    const quantity = cartData[itemIndex].quantity;\n\n    cartData[itemIndex].subTotal = price * quantity;\n\n    const total = cartData.reduce((acc, curr) => acc + curr.subTotal, 0);\n    setCartTotal(total);\n\n    setCart(cartData);\n  };\n\n  const handRemoveFromCart = itemId => {\n    let cartData = [...cart];\n    cartData = _.filter(cartData, item => item.id !== itemId);\n\n    const total = cartData.reduce((acc, curr) => acc + curr.subTotal, 0);\n    setCartTotal(total);\n\n    setCart(cartData);\n  };\n\n  const handleConfirm = () => {\n    setIndex(0);\n    setOrderCompleteData(null);\n  };\n\n  const views = [\n    {\n      title: \"Products\",\n      component: <Products handleAddToCart={handleAddToCart} />\n    },\n    {\n      title: \"Cart\",\n      component: (\n        <Cart\n          cart={cart}\n          cartTotal={cartTotal}\n          handleCartQuantity={handleCartQuantity}\n          handRemoveFromCart={handRemoveFromCart}\n          setIndex={setIndex}\n        />\n      )\n    },\n    {\n      title: \"Checkout\",\n      component: (\n        <Checkout\n          cart={cart}\n          cartTotal={cartTotal}\n          handlePayment={handlePayment}\n          handleFieldChange={handleFieldChange}\n          billingInfo={billingInfo}\n          orderCompleteData={orderCompleteData}\n          handleConfirm={handleConfirm}\n          paymentTransitionDelay={paymentTransitionDelay}\n          errors={errors}\n        />\n      )\n    }\n  ];\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className={classes.root}>\n        <CssBaseline />\n\n        <Container component=\"main\" className={classes.main} maxWidth=\"sm\">\n          {\n            <ViewsHeader\n              colorScheme={colorScheme}\n              setColorScheme={setColorScheme}\n            >\n              {views[index].title}\n            </ViewsHeader>\n          }\n          {views[index].component}\n        </Container>\n\n        <Container component=\"footer\" className={classes.footer} maxWidth=\"sm\">\n          <FooterNavigation\n            onChange={setIndex}\n            index={index}\n            cartCount={cart.length}\n          />\n        </Container>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"typeface-roboto\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}